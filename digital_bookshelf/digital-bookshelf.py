# -*- coding: utf-8 -*-
"""python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1TNvZx2dVk890sWOCE1mtAYuTiERNjRAf
"""

class Book:
    def __init__(self, title, author, pages):
        self.title = title
        self.author = author
        self.pages = pages

    def __str__(self):
        return f"'{self.title}' by {self.author}"

    def __repr__(self):
        return f"Book(title='{self.title}', author='{self.author}', pages={self.pages})"

class Bookshelf:
    def __init__(self):
        self.books = []

    def add_book(self, book):
        if not isinstance(book, Book):
            raise TypeError("Only Book instances can be added.")
        self.books.append(book)

    def __len__(self):
        return len(self.books)

    def __getitem__(self, index):
        return self.books[index]

    def __contains__(self, title):
        return any(book.title == title for book in self.books)

    def __add__(self, other):
        if not isinstance(other, Bookshelf):
            raise TypeError("You can only add another Bookshelf.")
        combined = Bookshelf()
        combined.books = self.books + other.books
        return combined

    def __str__(self):
        return f"Bookshelf with {len(self.books)} books."

    def list_books(self):
        for book in self.books:
            print(f"- {book}")

b1 = Book("1984", "George Orwell", 328)
b2 = Book("The Hobbit", "J.R.R. Tolkien", 310)
b3 = Book("The Alchemist", "Paulo Coelho", 190)

shelf1 = Bookshelf()
shelf1.add_book(b1)
shelf1.add_book(b2)

shelf2 = Bookshelf()
shelf2.add_book(b3)

print(len(shelf1))         # → 2
print(b1 in shelf1)        # → True
print("The Alchemist" in shelf1)  # → False
print(shelf1[1])           # → 'The Hobbit' by J.R.R. Tolkien

combined = shelf1 + shelf2
print(combined)            # → Bookshelf with 3 books.
combined.list_books()

